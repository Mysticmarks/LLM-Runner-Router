{
  "name": "llm-runner-router",
  "version": "2.0.0",
  "description": "Universal LLM model loader and inference router - agnostic, fast, and intelligent",
  "main": "src/index.js",
  "types": "types/index.d.ts",
  "type": "module",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "demo": "node src/index.js",
    "build": "node scripts/build.js",
    "prebuild": "node scripts/prebuild-automation.js",
    "deploy": "node scripts/deploy.js",
    "migrate": "node -e \"import('./src/db/DatabaseManager.js').then(({DatabaseManager}) => new DatabaseManager().initialize())\"",
    "test": "node --experimental-vm-modules node_modules/.bin/jest --runTestsByPath tests/final-validation.test.js --forceExit",
    "test:unit": "node --experimental-vm-modules node_modules/.bin/jest tests/basic.test.js",
    "test:integration": "node --experimental-vm-modules node_modules/.bin/jest tests/integration",
    "test:enterprise": "node --experimental-vm-modules node_modules/.bin/jest tests/enterprise",
    "test:watch": "node --experimental-vm-modules node_modules/.bin/jest --watch",
    "test:coverage": "node --experimental-vm-modules node_modules/.bin/jest --coverage",
    "benchmark": "node examples/benchmarks/performance.js",
    "setup:bitnet": "node scripts/setup-bitnet.js",
    "test:bitnet": "node scripts/test-bitnet.js",
    "lint": "eslint src/**/*.js",
    "format": "prettier --write src/**/*.js",
    "docs": "jsdoc -c jsdoc.json",
    "docs:serve": "node docs-express-server.js",
    "build:bindings": "./scripts/build-all-bindings.sh --release",
    "build:bindings:debug": "./scripts/build-all-bindings.sh --debug",
    "build:python": "./scripts/build-all-bindings.sh --target python",
    "build:rust": "./scripts/build-all-bindings.sh --target rust",
    "build:wasm": "./scripts/build-all-bindings.sh --target wasm",
    "build:native": "./scripts/build-all-bindings.sh --target native",
    "test:bindings": "npm run test:python && npm run test:rust && npm run test:wasm && npm run test:native",
    "test:python": "cd bindings/python && python -m pytest tests/ -v",
    "test:rust": "cd bindings/rust && cargo test",
    "test:wasm": "cd bindings/wasm && wasm-pack test --chrome --headless",
    "test:native": "cd src/native && cargo test && npm test",
    "install:python": "cd bindings/python && pip install -e .",
    "install:rust": "cd bindings/rust && cargo build --release",
    "install:wasm": "cd bindings/wasm && wasm-pack build --target web",
    "install:native": "cd src/native && npm install && npm run build",
    "clean:bindings": "rm -rf bindings/*/target bindings/*/pkg* bindings/*/dist bindings/*/build src/native/target dist/",
    "prepublishOnly": "npm run lint && npm run test && npm run build",
    "prepack": "npm run build"
  },
  "keywords": [
    "llm",
    "ai",
    "machine-learning",
    "inference",
    "gguf",
    "onnx",
    "model-loader",
    "router",
    "webgpu",
    "wasm",
    "enterprise",
    "multi-tenancy",
    "ab-testing",
    "audit-logging",
    "sla-monitoring",
    "authentication"
  ],
  "author": "Echo AI Systems",
  "license": "MIT",
  "dependencies": {
    "@apollo/server": "^4.10.0",
    "@graphql-tools/schema": "^10.0.25",
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.8.0",
    "@huggingface/hub": "^0.15.0",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.46.1",
    "@opentelemetry/exporter-jaeger": "^1.25.1",
    "@opentelemetry/exporter-prometheus": "^0.52.1",
    "@opentelemetry/exporter-zipkin": "^1.25.1",
    "@opentelemetry/resources": "^1.25.1",
    "@opentelemetry/sdk-metrics": "^1.25.1",
    "@opentelemetry/sdk-node": "^0.52.1",
    "@opentelemetry/sdk-trace-base": "^1.25.1",
    "@opentelemetry/sdk-trace-node": "^1.25.1",
    "@opentelemetry/semantic-conventions": "^1.25.1",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@xenova/transformers": "^2.17.0",
    "bcrypt": "^6.0.0",
    "circuit-breaker": "^0.0.4",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.2",
    "express-validator": "^7.2.1",
    "graphql": "^16.8.0",
    "graphql-subscriptions": "^3.0.0",
    "helmet": "^8.1.0",
    "http-proxy-middleware": "^3.0.5",
    "iconv-lite": "^0.7.0",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^10.2.0",
    "ml-distance": "^4.0.0",
    "morgan": "^1.10.1",
    "msgpackr": "^1.10.0",
    "multer": "^2.0.2",
    "node-llama-cpp": "^3.12.4",
    "onnxruntime-web": "^1.22.0",
    "openapi-types": "^12.1.3",
    "p-queue": "^8.0.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "passport-oauth2": "^1.8.0",
    "pino": "^8.19.0",
    "prom-client": "^15.1.3",
    "rate-limiter-flexible": "^7.2.0",
    "redis": "^5.8.1",
    "sharp": "^0.33.0",
    "socket.io": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tiktoken": "^1.0.0",
    "uuid": "^11.1.0",
    "ws": "^8.16.0"
  },
  "optionalDependencies": {
    "onnxruntime-node": "^1.22.0-rev"
  },
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@eslint/js": "^9.33.0",
    "@types/node": "^20.11.0",
    "eslint": "^8.56.0",
    "fastify": "^4.26.0",
    "globals": "^16.3.0",
    "jest": "^29.7.0",
    "joi": "^18.0.0",
    "jsdoc": "^4.0.0",
    "nodemon": "^3.0.0",
    "prettier": "^3.2.0",
    "supertest": "^7.1.4",
    "webpack": "^5.90.0",
    "webpack-cli": "^5.1.0",
    "winston": "^3.17.0"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MCERQUA/LLM-Runner-Router.git"
  },
  "bugs": {
    "url": "https://github.com/MCERQUA/LLM-Runner-Router/issues"
  },
  "homepage": "https://github.com/MCERQUA/LLM-Runner-Router#readme",
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "files": [
    "src/",
    "types/",
    "bindings/",
    "scripts/build-all-bindings.sh",
    "README.md",
    "LICENSE",
    "package.json"
  ]
}
